/***************************************************************************
 *  TransportationTask.proto - atwork Protocol - Transportation Task message
 *
 *  Copyright  2016 Alexander Moriarty
 ****************************************************************************/

/*  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions
 *  are met:
 *
 * - Redistributions of source code must retain the above copyright
 *   notice, this list of conditions and the following disclaimer.
 * - Redistributions in binary form must reproduce the above copyright
 *   notice, this list of conditions and the following disclaimer in
 *   the documentation and/or other materials provided with the
 *   distribution.
 * - Neither the name of the authors nor the names of its contributors
 *   may be used to endorse or promote products derived from this
 *   software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 * COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
 * OF THE POSSIBILITY OF SUCH DAMAGE.
 */

package atwork_pb_msgs;

import "Inventory.proto";
import "Time.proto";

option java_package = "org.atwork.common_msgs";
option java_outer_classname = "TransportationTaskProtos";

message TransportationTask {
  // The requested product represented by their identifier
  required ObjectIdentifier object = 1;

  // There are two different interpretations of this field:
  // 1. When the destination field is set, the object(s) must be delivered to
  //     this destination INSIDE of the container.
  // 2. When the destination field is not set, the container represents the
  //     location into which the object(s) must be delivered.
  optional ObjectIdentifier container = 2;

  // The already delivered quantity of the object
  required uint64 quantity_delivered = 3;

  // The requested quantity of the object. This is only required for object
  // classes. When a concrete object instance is requested, this field is not
  // set.
  // If the objects are requested in a container (i.e. the container field is
  // set), this field specifies the amount of objects inside the container!
  optional uint64 quantity_requested = 4;

  // The location to where the product should be delivered. When the destination
  // is not specified, the container must be set. This container the identifies
  // the delivery location.
  optional LocationIdentifier destination = 5;

  // The location to where the product should be fetched
  optional LocationIdentifier source = 6;

  // The team which is currently processing this order
  optional string processing_team = 7;
}
